"use client";

import "@/styles/scrollbar-hide.css";
import { ChevronLeft, ChevronRight } from "lucide-react";
import { useRouter } from "next/navigation";
import { useState } from "react";

interface SubCategory {
  id?: number;
  title: string;
  icon?: string;
}

interface Category {
  id: number;
  title: string;
  icon: string;
  subCategories?: SubCategory[];
}

const helplineCategories: Category[] = [
  {
    id: 1,
    title: "ЁЯЫНя╕П рж╢ржкрж┐ржВ ржорж▓",
    icon: "/assets/helpline/shoping-mall.png",
    subCategories: [
      { id: 101, title: "ЁЯЫТ рж╕рзБржкрж╛рж░ ржорж▓" },
      { id: 102, title: "ЁЯПм рж╕рзНржерж╛ржирзАржпрж╝ ржмрж╛ржЬрж╛рж░" },
      { id: 103, title: "ЁЯПв ржкрзНрж▓рж╛ржЬрж╛" },
      { id: 104, title: "ЁЯзе ржлрзНржпрж╛рж╢ржи ржЖржЙржЯрж▓рзЗржЯ" },
      { id: 105, title: "ЁЯН┐ ржлрзБржб ржХрзЛрж░рзНржЯ" },
    ],
  },
  {
    id: 2,
    title: "ЁЯМ│ ржкрж╛рж░рзНржХ",
    icon: "/assets/helpline/park.png",
    subCategories: [
      { id: 201, title: "ЁЯзШ ржкрж╛ржмрж▓рж┐ржХ ржкрж╛рж░рзНржХ" },
      { id: 202, title: "ЁЯзТ рж╢рж┐рж╢рзБ ржкрж╛рж░рзНржХ" },
      { id: 203, title: "ЁЯР╛ ржкрж╢рзБ ржкрж╛рж░рзНржХ" },
      { id: 204, title: "ЁЯПГ ржЬржЧрж┐ржВ ржЯрзНрж░рзНржпрж╛ржХ ржкрж╛рж░рзНржХ" },
      { id: 205, title: "ЁЯЪ┤тАНтЩВя╕П ржЗржХрзЛ/ржкрзНрж░рж╛ржХрзГрждрж┐ржХ ржкрж╛рж░рзНржХ" },
    ],
  },
  {
    id: 3,
    title: "ЁЯН╜я╕П рж░рзЗрж╕рзНржЯрзБрж░рзЗржирзНржЯ",
    icon: "/assets/helpline/restaurant.png",
    subCategories: [
      { id: 301, title: "ЁЯНЫ ржмрж╛ржЩрж╛рж▓рж┐ ржЦрж╛ржмрж╛рж░" },
      { id: 302, title: "ЁЯНФ ржлрж╛рж╕рзНржЯ ржлрзБржб" },
      { id: 303, title: "ЁЯНг ржПрж╢рж┐ржпрж╝рж╛ржи/ржЪрж╛ржЗржирж┐ржЬ ржЦрж╛ржмрж╛рж░" },
      { id: 304, title: "ЁЯНХ ржкрж┐рзОржЬрж╛ ржкрзНрж▓рзЗрж╕" },
      { id: 305, title: "ЁЯН░ ржбрзЗржЬрж╛рж░рзНржЯ ржУ ржХрзНржпрж╛ржлрзЗ" },
      { id: 306, title: "ЁЯеЧ рж╣рзЗрж▓ржжрж┐/ржЗржХрзЛ ржлрзБржб" },
    ],
  },
  {
    id: 4,
    title: "ЁЯПе рж╣рж╛рж╕ржкрж╛рждрж╛рж▓ ржУ ржХрзНрж▓рж┐ржирж┐ржХ",
    icon: "/assets/helpline/hospital.png",
    subCategories: [
      { id: 401, title: "ЁЯПе рж╕рж░ржХрж╛рж░рж┐ рж╣рж╛рж╕ржкрж╛рждрж╛рж▓" },
      { id: 402, title: "ЁЯПи ржкрзНрж░рж╛ржЗржнрзЗржЯ рж╣рж╛рж╕ржкрж╛рждрж╛рж▓" },
      { id: 403, title: "ЁЯй║ ржХрзНрж▓рж┐ржирж┐ржХ" },
      { id: 404, title: "ЁЯж╖ ржбрзЗржирзНржЯрж╛рж▓ ржХрзНрж▓рж┐ржирж┐ржХ" },
      { id: 405, title: "ЁЯСйтАНтЪХя╕П ржбрж╛ржпрж╝рж╛ржЧржирж╕рзНржЯрж┐ржХ рж╕рзЗржирзНржЯрж╛рж░" },
    ],
  },
  {
    id: 5,
    title: "ЁЯХМ ржзрж░рзНржорзАржпрж╝ рж╕рзНржерж╛ржи",
    icon: "/assets/helpline/mosque.png",
    subCategories: [
      { id: 501, title: "ЁЯХМ ржорж╕ржЬрж┐ржж" },
      { id: 502, title: "ЁЯЫХ ржоржирзНржжрж┐рж░" },
      { id: 503, title: "тЫк ржЧрж┐рж░рзНржЬрж╛" },
      { id: 504, title: "ЁЯХН рж╕рж┐ржирж╛ржЧржЧ" },
    ],
  },
  {
    id: 6,
    title: "ЁЯОб ржкрж░рзНржпржЯржи ржЖржХрж░рзНрж╖ржг",
    icon: "/assets/helpline/tourist.png",
    subCategories: [
      { id: 601, title: "ЁЯПп ржРрждрж┐рж╣рж╛рж╕рж┐ржХ рж╕рзНржерж╛ржи" },
      { id: 602, title: "ЁЯМК рж╕рзИржХржд / ржиржжрзАрждрзАрж░" },
      { id: 603, title: "ЁЯПЦя╕П рж░рж┐рж╕рзЛрж░рзНржЯ" },
      { id: 604, title: "ЁЯЧ┐ рж╕рзНржорзГрждрж┐рж╕рзМржз" },
      { id: 605, title: "тЫ░я╕П ржкрж╛рж╣рж╛ржбрж╝ / ржкрзНрж░рж╛ржХрзГрждрж┐ржХ ржжрзГрж╢рзНржп" },
    ],
  },
  {
    id: 7,
    title: "ЁЯПл рж╢рж┐ржХрзНрж╖рж╛ ржкрзНрж░рждрж┐рж╖рзНржарж╛ржи",
    icon: "/assets/helpline/school.png",
    subCategories: [
      { id: 701, title: "ЁЯПл рж╕рзНржХрзБрж▓" },
      { id: 702, title: "ЁЯПЫя╕П ржХрж▓рзЗржЬ" },
      { id: 703, title: "ЁЯОУ ржмрж┐рж╢рзНржмржмрж┐ржжрзНржпрж╛рж▓ржпрж╝" },
      { id: 704, title: "ЁЯзк ржмрж┐ржЬрзНржЮрж╛ржи ржУ ржЧржмрзЗрж╖ржгрж╛ ржкрзНрж░рждрж┐рж╖рзНржарж╛ржи" },
      { id: 705, title: "ЁЯПл ржХрзЛржЪрж┐ржВ рж╕рзЗржирзНржЯрж╛рж░" },
    ],
  },
  {
    id: 8,
    title: "ЁЯПи рж╣рзЛржЯрзЗрж▓ ржУ рж░рж┐рж╕рзЛрж░рзНржЯ",
    icon: "/assets/helpline/hotel.png",
    subCategories: [
      { id: 801, title: "тнР рзй-рждрж╛рж░ржХрж╛ рж╣рзЛржЯрзЗрж▓" },
      { id: 802, title: "тнР рзл-рждрж╛рж░ржХрж╛ рж╣рзЛржЯрзЗрж▓" },
      { id: 803, title: "ЁЯЫПя╕П ржмрж╛ржЬрзЗржЯ рж╣рзЛржЯрзЗрж▓" },
      { id: 804, title: "ЁЯМ┤ рж░рж┐рж╕рзЛрж░рзНржЯ" },
      { id: 805, title: "ЁЯПХя╕П ржЗржХрзЛ рж▓ржЬ" },
    ],
  },
  {
    id: 9,
    title: "ЁЯЫТ рж╕рзБржкрж╛рж░ржорж╛рж░рзНржХрзЗржЯ ржУ ржорзБржжрж┐ ржжрзЛржХрж╛ржи",
    icon: "/assets/helpline/store.png",
    subCategories: [
      { id: 901, title: "ЁЯПк ржХржиржнрж┐ржирж┐ржпрж╝рзЗржирзНрж╕ рж╕рзНржЯрзЛрж░" },
      { id: 902, title: "ЁЯЫНя╕П ржбрж┐ржкрж╛рж░рзНржЯржорзЗржирзНржЯрж╛рж▓ рж╕рзНржЯрзЛрж░" },
      { id: 903, title: "ЁЯз┤ ржХрж╕ржорзЗржЯрж┐ржХрж╕ / рж╣рж╛ржЙржЬрж╣рзЛрж▓рзНржб" },
      { id: 904, title: "ЁЯНЕ ржлрзНрж░рзЗрж╢ ржлрзБржб ржорж╛рж░рзНржХрзЗржЯ" },
      { id: 905, title: "ЁЯНЦ ржорж╛ржВрж╕ / ржорж╛ржЫрзЗрж░ ржмрж╛ржЬрж╛рж░" },
    ],
  },
  {
    id: 10,
    title: "ЁЯЪМ ржкрж░рж┐ржмрж╣ржи ржХрзЗржирзНржжрзНрж░",
    icon: "/assets/helpline/transportation.png",
    subCategories: [
      { id: 1001, title: "ЁЯЪЙ рж░рзЗрж▓ рж╕рзНржЯрзЗрж╢ржи" },
      { id: 1002, title: "ЁЯЪМ ржмрж╛рж╕ ржЯрж╛рж░рзНржорж┐ржирж╛рж▓" },
      { id: 1003, title: "ЁЯЫея╕П ржлрзЗрж░рж┐ / рж▓ржЮрзНржЪ ржЯрж╛рж░рзНржорж┐ржирж╛рж▓" },
      { id: 1004, title: "ЁЯЪЦ рж░рж╛ржЗржб ржмрзБржХрж┐ржВ рж╕рзНржЯрзНржпрж╛ржирзНржб" },
      { id: 1005, title: "ЁЯЕ┐я╕П ржкрж╛рж░рзНржХрж┐ржВ ржЬрзЛржи" },
    ],
  },
  {
    id: 11,
    title: "тЬИя╕П ржмрж┐ржорж╛ржиржмржирзНржжрж░",
    icon: "/assets/helpline/airport.png",
    subCategories: [
      { id: 1101, title: "ЁЯЫл ржЖржирзНрждрж░рзНржЬрж╛рждрж┐ржХ ржмрж┐ржорж╛ржиржмржирзНржжрж░" },
      { id: 1102, title: "ЁЯЫм ржЕржнрзНржпржирзНрждрж░рзАржг ржмрж┐ржорж╛ржиржмржирзНржжрж░" },
      { id: 1103, title: "ЁЯз│ ржХрж╛рж░рзНржЧрзЛ ржЯрж╛рж░рзНржорж┐ржирж╛рж▓" },
      { id: 1104, title: "ЁЯз╝ ржнрж┐ржЖржЗржкрж┐ рж▓рж╛ржЙржЮрзНржЬ" },
    ],
  },
];

import { useRef } from "react";

export default function HelplineSection() {
  const router = useRouter();
  const marqueeRef = useRef<HTMLDivElement>(null);
  const [selectedCategory, setSelectedCategory] = useState<number | null>(null);

  const scrollAmount = 300; // px to scroll per click

  const handleCategoryClick = (category: Category) => {
    const encodedTitle = encodeURIComponent(category.id);
    router.push(`/helpline/${encodedTitle}`);
  };

  const handleScroll = (direction: "left" | "right") => {
    if (marqueeRef.current) {
      const { scrollLeft } = marqueeRef.current;
      const newScroll =
        direction === "left"
          ? scrollLeft - scrollAmount
          : scrollLeft + scrollAmount;
      marqueeRef.current.scrollTo({ left: newScroll, behavior: "smooth" });
    }
  };

  return (
    <div className="container mx-auto py-3 px-4">
      <h1 className="text-5xl text-center py-4">ржХржорж┐ржЙржирж┐ржЯрж┐ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи </h1>
      <div className="relative overflow-hidden">
        {/* Left Arrow */}
        <button
          aria-label="Scroll left"
          className="absolute left-0 top-1/2 -translate-y-1/2 z-10 bg-white/80 hover:bg-white rounded-full shadow p-2 transition-colors"
          style={{
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
          }}
          onClick={() => handleScroll("left")}
        >
          <ChevronLeft className="w-6 h-6" />
        </button>
        {/* Right Arrow */}
        <button
          aria-label="Scroll right"
          className="absolute right-0 top-1/2 -translate-y-1/2 z-10 bg-white/80 hover:bg-white rounded-full shadow p-2 transition-colors"
          style={{
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
          }}
          onClick={() => handleScroll("right")}
        >
          <ChevronRight className="w-6 h-6" />
        </button>
        <div
          ref={marqueeRef}
          className="whitespace-nowrap pb-4 overflow-x-auto scrollbar-hide scroll-smooth flex space-x-4 px-4"
          style={{ scrollBehavior: "smooth" }}
        >
          {[...helplineCategories, ...helplineCategories].map(
            (category, index) => (
              <div
                key={index}
                onClick={() => handleCategoryClick(category)}
                className="flex-shrink-0 flex flex-col items-center justify-center bg-white rounded-lg shadow-sm p-4 min-w-[100px] cursor-pointer hover:bg-gray-50 transition-colors"
              >
                <div className="w-12 h-12 flex items-center justify-center rounded-full bg-red-100 mb-2">
                  <img
                    src={category.icon}
                    alt={category.title}
                    className="w-6 h-6"
                  />
                </div>
                <span className="text-sm text-center font-medium">
                  {category.title}
                </span>
              </div>
            )
          )}
        </div>
      </div>
    </div>
  );
}
